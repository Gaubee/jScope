{"version":3,"sources":["/source/jScope.min.js","jScope.min.js"],"names":["_ReturnThisV","factory","define","amd","root","exports","exp","Object","create","k","global","window","this","$Push","arr","item","length","$ForEach","cb","i","len","$Slice","start_index","end_index","_slice","call","$Remove","index","indexOf","splice","$HasAndGet","obj","key","hasOwnProperty","$IsOwn","_hasOwnPro","$InsOf","Con","$UID","prefix","Math","random","toString","substr","$Create","proto","PROTO","__PROTOTYPE","$LastItem","V","valueOf","_ReturnThisVString","$Base","_BaseTypeCusMap","_Undefined_AND_Null_TypeError","TypeError","Scope","ref_obj","options","self","id","E","C","R","store","O","$Object","setParent","parent","returner","B","onerror","_GlobalFunction","on","_ScopeNormalGet","unpack","res","has","P","get","$$Function","T","S","getTopScope","_ScopeTopGet","_ScopeNormalSet","value","set","_ScopeTopSet","_ScopeNormalTypeOf","TypeOf","_ScopeTopTypeOf","_ScopeNormalDel","Del","_ScopeTopDel","_DestroyedHandle","ReferenceError","$$Boolean","v","$Boolean","$true","$false","fun","args","$Function","$$Null","$Null","$null","$$Number","$Number","isNaN","$NaN","Infinity","$Infinity","$_Infinity","$$Object","G","_$$Object_Mix_HasProp","_$$Object_Mix_GetProp","getter","_$$Object_Mix_SetProp","data","config","setter","assignPropConfig","old_config","new_config","res_config","$$String","$String","$$Undefined","$Undefined","$undefined","__VALUEOF","__TOSTRING","Function","_GlobalObject","Array","TRUE","RegExp","FALSE","slice","String","Base","string","boolean","number","function","undefined","object","_$BaseProto","constructor","TypeofValue","destory","equal","like","jScope","__ScopePrototype","prototype","eventName","eventHandle","events","off","emit","eventList","arguments","handle","apply","push","scope_name","child_scope","C_SP","pop","csp","destroy","Var","funName","current","Boolean","__$$FunctionProperty","run","Null","__$$NullProperty","Number","NaN","getProp","__$$ObjectProperty","_DefaultPropConfig","writable","enumerable","configurable","defGet","defSet","def","__$$StringPrototype","isFinite","charAt","Undefined","__$$UndefinedProperty"],"mappings":"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","file":"jScope.min.js","sourcesContent":["(function (root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine([], function () {\r\n\t\t\treturn factory(root);\r\n\t\t});\r\n\t} else if (typeof exports === 'object') {\r\n\t\tvar exp = Object.create(null);\r\n\t\tfactory(exp);\r\n\t\tfor (var k in exp) {\r\n\t\t\texports[k] = root[k] = exp[k];\r\n\t\t}\r\n\t} else {\r\n\t\tfactory(root);\r\n\t}\r\n} (typeof global != 'undefined' ? global : typeof window != 'undefined' ? window : this, function (global) {\n/*\r\n * 更好的压缩率\r\n */\r\nvar __PROTOTYPE = \"prototype\";\r\nvar __VALUEOF = \"valueOf\";\r\nvar __TOSTRING = \"toString\";\r\nvar void_0;\r\nvar _GlobalFunction = Function;\r\nvar _GlobalArray = Array;\r\nvar _GlobalObject = Object;\r\nvar _GlobalRegExp = RegExp;\r\n\r\nvar TRUE = true;\r\nvar FALSE = false;\r\nvar NULL = null;\r\nvar UNDEFINED;\r\n// var NAN = NaN;\r\n// var INFINITY = Infinity;\r\n\r\nfunction $Push(arr, item) {\r\n\tarr[arr.length] = item;\r\n\treturn arr\r\n}\r\nfunction $Unshift(arr, item) {\r\n\tarr.unshift(item);\r\n\treturn arr\r\n};\r\n\r\nfunction $ForEach(arr, cb) {\r\n\tfor (var i = 0, len = arr.length; i < len; i += 1) {\r\n\t\tcb(arr[i], i)\r\n\t}\r\n}\r\n\r\nfunction $Map(arr, cb) {\r\n\tfor (var i = 0, len = arr.length, res = []; i < len; i += 1) {\r\n\t\t$Push(res, cb(arr[i], i))\r\n\t}\r\n\treturn res\r\n}\r\n\r\nfunction $Some(arr, cb) {\r\n\tfor (var i = 0, len = arr.length; i < len; i += 1) {\r\n\t\tif (cb(arr[i], i)) return TRUE\r\n\t}\r\n}\r\n\r\nvar _slice = Array[__PROTOTYPE].slice;\r\nvar __StringProto__ = String[__PROTOTYPE];\r\n\r\nfunction $Slice(arr, start_index, end_index) {\r\n\treturn _slice.call(arr, start_index, end_index);\r\n};\r\n\r\nfunction $Remove(arr, item) {\r\n\tvar index = arr.indexOf(item);\r\n\tindex !== -1 && arr.splice(index, 1);\r\n};\r\n\r\nfunction $HasAndGet(obj, key) {\r\n\treturn obj.hasOwnProperty(key) && obj[key];\r\n};\r\n\r\nvar _hasOwnPro = _GlobalObject.hasOwnProperty;\r\n\r\nfunction $IsOwn(obj, key) {\r\n\treturn _hasOwnPro.call(obj, key);\r\n};\r\n\r\nfunction $InsOf(obj, Con) {\r\n\treturn obj instanceof Con\r\n};\r\n\r\nfunction $IsString(str) {\r\n\treturn typeof str === \"string\"\r\n};\r\n\r\nfunction $IsNumber(num) {\r\n\treturn typeof num === \"number\"\r\n};\r\n\r\nfunction $IsBoolean(bool) {\r\n\treturn typeof bool === \"boolean\"\r\n};\r\n\r\nfunction $UID(prefix) {\r\n\treturn (prefix || \"\") + Math.random().toString(36).substr(2);\r\n};\r\n\r\nvar PROTO = _GlobalFunction();\r\n\r\nfunction $Create(proto) {\r\n\tPROTO[__PROTOTYPE] = proto;\r\n\treturn new PROTO;\r\n};\r\n\r\nfunction $LastItem(arr) {\r\n\treturn arr[arr.length - 1]\r\n};\r\n\r\nfunction noop() { }\r\n\r\n//将字符串反转义,同JSON.stringify(string)\r\nvar charIndexBuggy = \"a\"[0] != \"a\";\r\nvar Escapes = {\r\n\t92: \"\\\\\\\\\",\r\n\t34: '\\\\\"',\r\n\t8: \"\\\\b\",\r\n\t12: \"\\\\f\",\r\n\t10: \"\\\\n\",\r\n\t13: \"\\\\r\",\r\n\t9: \"\\\\t\"\r\n};\r\n\r\nfunction strStringify(value) {\r\n\tvar result = '\"',\r\n\t\tindex = 0,\r\n\t\tlength = value.length,\r\n\t\tuseCharIndex = !charIndexBuggy || length > 10;\r\n\tvar symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\r\n\tfor (; index < length; index++) {\r\n\t\tvar charCode = value.charCodeAt(index);\r\n\t\t// If the character is a control character, append its Unicode or\r\n\t\t// shorthand escape sequence; otherwise, append the character as-is.\r\n\t\tswitch (charCode) {\r\n\t\t\tcase 8:\r\n\t\t\tcase 9:\r\n\t\t\tcase 10:\r\n\t\t\tcase 12:\r\n\t\t\tcase 13:\r\n\t\t\tcase 34:\r\n\t\t\tcase 92:\r\n\t\t\t\tresult += Escapes[charCode];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (charCode < 32) {\r\n\t\t\t\t\tresult += unicodePrefix + toPaddedString(2, charCode.toString(16));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tresult += useCharIndex ? symbols[index] : value.charAt(index);\r\n\t\t}\r\n\t}\r\n\treturn result + '\"';\r\n};\nfunction _ReturnThisV() {\r\n\treturn this.V && this.V.valueOf();\r\n};\r\n\r\nfunction _ReturnThisVString() {\r\n\treturn this.V + \"\";\r\n};\r\n\r\nScope.Base = $Base;\r\n\r\nfunction $Base(obj) {\r\n\treturn $InsOf(obj, $Base) ? obj : _BaseTypeCusMap[typeof obj](obj)\r\n};\r\nvar _BaseTypeCusMap = {\r\n\t\"string\": $String,\r\n\t\"boolean\": $Boolean,\r\n\t\"number\": $Number,\r\n\t\"function\": $Function,\r\n\t\"undefined\": $Undefined,\r\n\t\"object\": function (v) {\r\n\t\treturn (v /*!== null */ ? $Object : $Null)(v)\r\n\t}\r\n};\r\n\r\nvar _$BaseProto = $Base[__PROTOTYPE] = {\r\n\thas: function (key) {\r\n\t\treturn $IsOwn(this.V, key)\r\n\t},\r\n\t//get Property\r\n\tget: function (key, unpack) {\r\n\t\tvar res = this.V[key];\r\n\t\t$InsOf(res, $Base) || (res = $undefined);// if false then\r\n\t\treturn unpack ? res.valueOf() : res\r\n\t},\r\n\t//set Property\r\n\tset: function (key, value) {\r\n\t\treturn this.V[key] = $Base(value);\r\n\t},\r\n\tTypeOf: function () {\r\n\t\treturn this.constructor.TypeofValue;\r\n\t},\r\n\tdestory: function () {\r\n\t\tdelete this.V;\r\n\t},\r\n\t// ===\r\n\tequal: function (obj) {\r\n\t\treturn this.V === ($InsOf(obj, $Base) ? obj.V : obj)\r\n\t},\r\n\tlike: function (obj) {\r\n\t\treturn this.V == ($InsOf(obj, $Base) ? obj.V : obj)\r\n\t}\r\n};\r\n_$BaseProto[__VALUEOF] = _ReturnThisV;\r\n_$BaseProto[__TOSTRING] = _ReturnThisVString;\r\n\r\n\r\nfunction _Undefined_AND_Null_TypeError() {\r\n\tthrow TypeError(\"Cannot convert undefined or null to object\");\r\n};\nglobal.jScope = Scope;\r\n\r\nfunction Scope(ref_obj, options) {\r\n\toptions || (options = {});\r\n\tvar self = this;\r\n\tself.id = $UID(\"SC\");\r\n\tself.E = {}; // events\r\n\tself.C = []; // children local scope 子集\r\n\tself.R = ref_obj || {}; // reference objects 参考对象\r\n\tvar store = options.store;\r\n\tself.O = $InsOf(store, $Object) ? store : $Object($InsOf(store, Object) ? store : {}); // object 作用域的变量集合\r\n\tself.setParent(options.parent); // pare scope 父级\r\n\tself.returner = null; // 这个作用域最后的返回值\r\n\r\n\tself.B = null; // block 块作用域，默认不激活，交给插件处理\r\n\r\n\tvar onerror = options.onerror;\r\n\tif ($InsOf(onerror, _GlobalFunction)) {\r\n\t\tself.on(\"error\", onerror);\r\n\t}\r\n};\r\n\r\nvar __ScopePrototype = Scope.prototype = {};\r\n__ScopePrototype.on = function (eventName, eventHandle) {\r\n\tvar self = this;\r\n\tvar events = self.E;\r\n\t$Push(events[eventName] || (events[eventName] = []), eventHandle);\r\n\treturn self;\r\n};\r\n__ScopePrototype.off = function (eventName, eventHandle) {\r\n\tvar self = this;\r\n\tvar events = self.E;\r\n\t$Remove(events[eventName] || (events[eventName] = []), eventHandle);\r\n\treturn self;\r\n};\r\n__ScopePrototype.emit = function (eventName) {\r\n\tvar self = this;\r\n\tvar eventList = $HasAndGet(self.E, eventName);\r\n\tif (eventList) {\r\n\t\tvar args = arguments.length > 1 && $Slice(arguments, 1);\r\n\t\t$ForEach(eventList, function (handle) {\r\n\t\t\targs ? handle.apply(self, args) : handle.call(this);\r\n\t\t});\r\n\t}\r\n\treturn self;\r\n};\r\n__ScopePrototype.getTopScope = function () {\r\n\tvar res = this;\r\n\twhile (res.P) {\r\n\t\tres = res.P\r\n\t}\r\n\treturn res;\r\n}\r\n\r\n__ScopePrototype.push = function (scope_name) {\r\n\tvar self = this;\r\n\tvar child_scope = new Scope({}, {\r\n\t\tparent: self\r\n\t});\r\n\t$Push(self.C, child_scope);\r\n\r\n\tC_SP = child_scope;\r\n\treturn child_scope;\r\n};\r\n__ScopePrototype.pop = function (returner) {\r\n\tvar self = this;\r\n\tvar csp = $LastItem(self.C);\r\n\treturn csp && csp.destroy(returner);\r\n};\r\n\r\n__ScopePrototype.setParent = function (parent) {\r\n\tvar self = this;\r\n\tif (self.P = parent || null) {\r\n\t\tself.get = _ScopeNormalGet;\r\n\t\tself.set = _ScopeNormalSet;\r\n\t\tself.TypeOf = _ScopeNormalTypeOf;\r\n\t\tself.Del = _ScopeNormalDel;\r\n\t} else {\r\n\t\tself.get = _ScopeTopGet;\r\n\t\tself.set = _ScopeTopSet;\r\n\t\tself.TypeOf = _ScopeTopTypeOf;\r\n\t\tself.Del = _ScopeTopDel;\r\n\t}\r\n};\r\n__ScopePrototype.get = _ScopeNormalGet;\r\n\r\n/*\r\n * unpack: 是否解包，如果解包取出的对象默认是原生的JS对象，如果封包取出，则是内部存储的对象\r\n */\r\n/*GET*/\r\nfunction _ScopeNormalGet(key, unpack) {\r\n\tvar self = this;\r\n\tvar res = (self.O.has(key) ? self.O : self.P).get(key, unpack);\r\n\tif ($InsOf(res, _GlobalFunction) && res.T === self.O && !res.S) {// 修正函数对象的this指向\r\n\t\tres.T = self.getTopScope().O\r\n\t}\r\n\treturn res;\r\n};\r\n\r\nfunction _ScopeTopGet(key, unpack) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.get(key, unpack);\r\n};\r\n__ScopePrototype.set = _ScopeNormalSet;\r\n/*SET*/\r\nfunction _ScopeNormalSet(key, value) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).set(key, value);\r\n};\r\n\r\nfunction _ScopeTopSet(key, value) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.set(key, value);\r\n};\r\n__ScopePrototype.Var = _ScopeTopSet;\r\n/*TYPEOF*/\r\nfunction _ScopeNormalTypeOf(key) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).TypeOf(key);\r\n};\r\n\r\nfunction _ScopeTopTypeOf(key) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.TypeOf(key);\r\n};\r\n__ScopePrototype.TypeOf = _ScopeTopTypeOf;\r\n/*DELETE*/\r\nfunction _ScopeNormalDel(key) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).Del(key);\r\n};\r\n\r\nfunction _ScopeTopDel(key) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.Del(key);\r\n};\r\n__ScopePrototype.Del = _ScopeTopDel;\r\n\r\n// destroy 销毁作用域\r\n__ScopePrototype.destroy = function (returner) {\r\n\tvar self = this;\r\n\t// 注销事件监听\r\n\tself.E = null;\r\n\t// 销毁子集作用域\r\n\t$ForEach(self.C, function (csp) {\r\n\t\tcsp.destroy()\r\n\t});\r\n\tself.C = null;\r\n\t// 移除参考对象\r\n\tself.R = null;\r\n\t// 断开对象的引用，由系统垃圾回收器来进行回收\r\n\tself.O = null;\r\n\t// 断开与父级的关联\r\n\tif (self.P) {\r\n\t\tC_SP = self.P;\r\n\t\t$Remove(C_SP.C, self);\r\n\t\tself.P = null;\r\n\t}\r\n\r\n\t// 禁用这个作用域对象的所有方法。\r\n\tfor (var funName in __ScopePrototype) {\r\n\t\tself[funName] = _DestroyedHandle;\r\n\t}\r\n\r\n\tself.returner = returner;\r\n\treturn returner; // 直接返回返回值而不是被销毁的作用域。让作用域被CG直接回收\r\n};\r\n\r\nfunction _DestroyedHandle() {\r\n\tthrow ReferenceError(\"Scope objects has been destroyed.\");\r\n};\r\n\r\n\r\nvar C_SP = Scope.global = new Scope(global); //current Scope\r\n\r\nScope.current = function () {\r\n\treturn C_SP\r\n};\nScope.Boolean = $Boolean;\r\nfunction $$Boolean(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Boolean.TypeofValue = \"string\"\r\n\r\nvar __$$BooleanProperty = $$Boolean[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n/*\r\n * true false 是系统常量\r\n */\r\n$true = new $$Boolean(TRUE);\r\n$false = new $$Boolean(FALSE);\r\n\r\nfunction $Boolean(v) {\r\n\treturn v ? $true : $false\r\n};\nScope.Function = $Function;\r\n\r\nfunction $$Function(fun, args) {\r\n\tthis.V = fun;\r\n\tthis.T = null; // 临时的this对象\r\n\tthis.S = null; // bind函数所绑定的super this对象 \r\n};\r\n\r\n$$Function.TypeofValue = \"function\"\r\n\r\nvar __$$FunctionProperty = $$Function[__PROTOTYPE] = $Create(_$BaseProto);\r\n__$$FunctionProperty.run = function () {\r\n\tvar self = this;\r\n\tvar args = $Slice(arguments);\r\n\tself.V.apply(self.S || self.T, args);\r\n};\r\n\r\nfunction $Function(fun, args) {\r\n\treturn new $$Function(fun, args)\r\n};\nScope.Null = $Null;\r\nfunction $$Null(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Null.TypeofValue = \"object\";\r\n\r\nvar __$$NullProperty = $$Null[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$NullProperty[__VALUEOF] = _Undefined_AND_Null_TypeError;\r\n__$$NullProperty[__TOSTRING] = _Undefined_AND_Null_TypeError;\r\n/*\r\n * null是一个系统常量\r\n */\r\nvar $null = new $$Null(null);\r\n\r\nfunction $Null() {\r\n\treturn $null\r\n};\nScope.Number = $Number;\r\n\r\nfunction $$Number(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Number.TypeofValue = \"number\"\r\n\r\nvar __$$NumberProperty = $$Number[__PROTOTYPE] = $Create(_$BaseProto);\r\n/*\r\n * 系统常量\r\n */\r\nvar $NaN = new $$Number(NaN);\r\n$NaN.equal = function () { // any value including NaN, 所以直接返回false\r\n\treturn FALSE\r\n};\r\nvar $Infinity = new $$Number(Infinity);\r\nvar $_Infinity = new $$Number(-Infinity);\r\n\r\nfunction $Number(v) {\r\n\tvar self;\r\n\tif (isNaN(v)) {\r\n\t\tself = $NaN;\r\n\t} else if (v === Infinity) {\r\n\t\tself = $Infinity\r\n\t} else if (v === -Infinity) {\r\n\t\tself = $_Infinity\r\n\t} else {\r\n\t\tself = new $$Number(v);\r\n\t}\r\n\treturn self\r\n};\nScope.Object = $Object;\r\n\r\nfunction $$Object(v) {\r\n\tthis.V = v || {};\r\n\tthis.G = null; //getter\r\n\tthis.S = null; //setter\r\n\tthis.C = {}; //config\r\n};\r\n$$Object.getProp = function (obj, key) {\r\n\tif ($InsOf(obj, $$Object) || $InsOf(obj, $String) || $InsOf(obj, $Number)) { //可用属性名进行优化\r\n\t\tvar res = obj.get(key)\r\n\t} else if (obj) {\r\n\t\tres = obj[key]\r\n\t}\r\n\treturn res;\r\n};\r\n\r\n$$Object.TypeofValue = \"object\"\r\n\r\nfunction _$$Object_Mix_HasProp(key) {\r\n\tvar self = this;\r\n\treturn $IsOwn(self.V, key) || $IsOwn(self.G, key) || $IsOwn(self.S, key);\r\n};\r\n\r\nfunction _$$Object_Mix_GetProp(key) {\r\n\tvar self = this;\r\n\tvar getter = self.G;\r\n\tvar value = self.V;\r\n\tif ($IsOwn(getter, key)) {\r\n\t\tvar res = getter[key].call(value, key)\r\n\t} else {\r\n\t\tres = value[key]\r\n\t}\r\n\treturn res\r\n};\r\n\r\nfunction _$$Object_Mix_SetProp(key, data, config) {\r\n\tvar self = this;\r\n\tvar setter = self.S;\r\n\tvar value = self.V;\r\n\tif ($IsOwn(setter, key)) {\r\n\t\tsetter[key].call(value, key, data)\r\n\t} else {\r\n\t\tvar config = self.C;\r\n\t\t/*TODO:根据config判断对象是否可被重写*/\r\n\t\tconfig[key] = config;\r\n\t\tvalue[key] = data\r\n\t}\r\n\treturn data\r\n};\r\n\r\nvar __$$ObjectProperty = $$Object[__PROTOTYPE] = $Create(_$BaseProto);\r\n__$$ObjectProperty.has = function (key) {\r\n\treturn $IsOwn(this.C, key)\r\n};\r\nfunction assignPropConfig(old_config, new_config) {\r\n\tnew_config || (new_config = {});\r\n\tvar res_config = {};\r\n\t$ForEach([\r\n\t\t\"enumerable\",\r\n\t\t\"configurable\",\r\n\t\t\"writable\"\r\n\t], function (key) {\r\n\t\tres_config[key] = !!($IsOwn(new_config, key) ? new_config : old_config)[key]\r\n\t});\r\n\treturn res_config;\r\n};\r\n\r\nvar _DefaultPropConfig = {\r\n\twritable: TRUE,\r\n\tenumerable: TRUE,\r\n\tconfigurable: TRUE\r\n};\r\n\r\n//get Property\r\n__$$ObjectProperty.get = function (key, unpack) {\r\n\tvar self = this;\r\n\tif (self.has(key)) {\r\n\t\tvar res = self.G && $IsOwn(self.G, key) ? self.G[key].call(self, key) : self.V[key];\r\n\t} else {\r\n\t\tres = $undefined\r\n\t}\r\n\tres = unpack ? (res ? res.valueOf() : res) : $Base(res);\r\n\tif ($InsOf(res, $$Function)) {\r\n\t\tres.T = self;// 指定属性拥有着，从而function能有this对象\r\n\t}\r\n\treturn res;\r\n};\r\n//set Property\r\n__$$ObjectProperty.set = function (key, value) {\r\n\tvar self = this;\r\n\t/*TODO:根据config判断对象是否可被重写*/\r\n\tvar old_config = self.C[key];\r\n\tif (old_config && ((!old_config.writable && $IsOwn(self.V, key)) || !old_config.configurable)) {\r\n\t\treturn\r\n\t}\r\n\t// 普通的变量定义，初始化默认的config\r\n\t$IsOwn(self.C, key) || (self.C[key] = assignPropConfig(_DefaultPropConfig));\r\n\tvar V = $Base(value);\r\n\tself.S && $IsOwn(self.S, key) ? self.S[key].call(self, value, key) : (self.V[key] = value);\r\n\r\n\treturn V;\r\n};\r\n//define getter\r\n__$$ObjectProperty.defGet = function (key, handle, new_config) {\r\n\tvar self = this;\r\n\tvar getter = self.G || (self.G = {});\r\n\tvar old_config = self.C;\r\n\tif (!(handle instanceof Function)) {\r\n\t\tthrow TypeError(\"getter must be an function.\")\r\n\t}\r\n\t/*判断对象是否可被重写*/\r\n\tvar old_config = config[key] || _DefaultPropConfig;\r\n\tif (!old_config.configurable) {\r\n\t\treturn;\r\n\t}\r\n\tconfig[key] = assignPropConfig(old_config, new_config);\r\n\r\n\tgetter[key] = handle;\r\n\tdelete self.V[key];\r\n\tself.get = _$$Object_Mix_GetProp;\r\n\tself.has = _$$Object_Mix_HasProp;\r\n};\r\n//define setter\r\n__$$ObjectProperty.defSet = function (key, handle, new_config) {\r\n\tvar self = this;\r\n\tvar setter = self.S || (self.S = {});\r\n\tvar config = self.C;\r\n\tif (!(handle instanceof Function)) {\r\n\t\tthrow TypeError(\"setter must be an function.\")\r\n\t}\r\n\t/*判断对象是否可被重写*/\r\n\tvar old_config = config[key] || _DefaultPropConfig;\r\n\tif (!old_config.configurable) {\r\n\t\treturn;\r\n\t}\r\n\tconfig[key] = assignPropConfig(old_config, new_config);\r\n\r\n\tsetter[key] = handle;\r\n\tdelete self.V[key];\r\n\tself.set = _$$Object_Mix_SetProp;\r\n\tself.has = _$$Object_Mix_HasProp;\r\n};\r\n__$$ObjectProperty.def = function (key, new_config) {\r\n\tif (!new_config) {\r\n\t\treturn\r\n\t}\r\n\r\n\tvar self = this;\r\n\tvar value = self.V;\r\n\tvar config = self.C || {};\r\n\r\n\t/*判断对象是否可被重写*/\r\n\tvar old_config = config[key] || _DefaultPropConfig;\r\n\tif (!old_config.configurable) {\r\n\t\treturn;\r\n\t}\r\n\tconfig[key] = assignPropConfig(old_config, new_config);\r\n\r\n\tif ($IsOwn(value, key) && old_config.writable) {\r\n\t\tif ($IsOwn(config, value)) {\r\n\t\t\tvalue[key] = config.value\r\n\t\t}\r\n\t} else if (old_config.configurable) {\r\n\t\tif ($InsOf(new_config.get, _GlobalFunction)) {\r\n\t\t\tvar getter = self.G || (self.G = {});\r\n\t\t\tgetter[key] = new_config.get;\r\n\t\t}\r\n\t\tif ($InsOf(new_config.set, _GlobalFunction)) {\r\n\t\t\tvar setter = self.S || (self.S = {});\r\n\t\t\tsetter[key] = new_config.set;\r\n\t\t}\r\n\t}\r\n\treturn self;\r\n};\r\n__$$ObjectProperty.Del = function (key) {\r\n\tvar self = this;\r\n\tvar config = self.C;\r\n\tvar value = self.V;\r\n\tvar getter = self.G;\r\n\tvar setter = self.S;\r\n\tvar res = TRUE;\r\n\tif ($IsOwn(config, key)) {\r\n\t\t/*TODO:根据config判断对象是否可被删除*/\r\n\t\t// res = config[key]\r\n\t\tgetter && delete getter[key];\r\n\t\tsetter && delete setter[key];\r\n\t\tdelete value[key];\r\n\t\tdelete config[key];\r\n\t}\r\n\treturn res\r\n};\r\n\r\nfunction $Object(v) {\r\n\treturn v === null ? $null : new $$Object(v);\r\n};\nScope.String = $String;\r\n\r\nfunction $$String(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$String.TypeofValue = \"string\"\r\n\r\nvar __$$StringPrototype = $$String[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$StringPrototype.get = function (key) {\r\n\tvar self = this;\r\n\tvar value = self.V;\r\n\tif (isFinite(key) && key % 1 === 0) {\r\n\t\tvar res = value.charAt(key)\r\n\t} else {\r\n\t\tres = value[key]\r\n\t}\r\n\treturn res\r\n};\r\n__$$StringPrototype.set = function (key, obj) {\r\n\tvar self = this;\r\n\tvar value = self.V;\r\n\tif (!(isFinite(key) && key % 1 === 0)) {\r\n\t\tvalue[key] = obj\r\n\t}\r\n\treturn obj\r\n};\r\n\r\nfunction $String(v) {\r\n\treturn new $$String(v)\r\n};\nScope.Undefined = $Undefined;\r\nfunction $$Undefined(v) {\r\n\tthis.V = v;\r\n};\r\n$$Undefined.TypeofValue = \"undefined\";\r\n\r\nvar __$$UndefinedProperty = $$Undefined[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$UndefinedProperty[__VALUEOF] = _Undefined_AND_Null_TypeError;\r\n__$$UndefinedProperty[__TOSTRING] = _Undefined_AND_Null_TypeError;\r\n\r\n/*\r\n * undefined是一个系统常量\r\n */\r\nvar $undefined = new $$Undefined();\r\n\r\nfunction $Undefined() {\r\n\treturn $undefined\r\n};\n}));","(function (root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine([], function () {\r\n\t\t\treturn factory(root);\r\n\t\t});\r\n\t} else if (typeof exports === 'object') {\r\n\t\tvar exp = Object.create(null);\r\n\t\tfactory(exp);\r\n\t\tfor (var k in exp) {\r\n\t\t\texports[k] = root[k] = exp[k];\r\n\t\t}\r\n\t} else {\r\n\t\tfactory(root);\r\n\t}\r\n} (typeof global != 'undefined' ? global : typeof window != 'undefined' ? window : this, function (global) {\n/*\r\n * 更好的压缩率\r\n */\r\nvar __PROTOTYPE = \"prototype\";\r\nvar __VALUEOF = \"valueOf\";\r\nvar __TOSTRING = \"toString\";\r\nvar void_0;\r\nvar _GlobalFunction = Function;\r\nvar _GlobalArray = Array;\r\nvar _GlobalObject = Object;\r\nvar _GlobalRegExp = RegExp;\r\n\r\nvar TRUE = true;\r\nvar FALSE = false;\r\nvar NULL = null;\r\nvar UNDEFINED;\r\n// var NAN = NaN;\r\n// var INFINITY = Infinity;\r\n\r\nfunction $Push(arr, item) {\r\n\tarr[arr.length] = item;\r\n\treturn arr\r\n}\r\nfunction $Unshift(arr, item) {\r\n\tarr.unshift(item);\r\n\treturn arr\r\n};\r\n\r\nfunction $ForEach(arr, cb) {\r\n\tfor (var i = 0, len = arr.length; i < len; i += 1) {\r\n\t\tcb(arr[i], i)\r\n\t}\r\n}\r\n\r\nfunction $Map(arr, cb) {\r\n\tfor (var i = 0, len = arr.length, res = []; i < len; i += 1) {\r\n\t\t$Push(res, cb(arr[i], i))\r\n\t}\r\n\treturn res\r\n}\r\n\r\nfunction $Some(arr, cb) {\r\n\tfor (var i = 0, len = arr.length; i < len; i += 1) {\r\n\t\tif (cb(arr[i], i)) return TRUE\r\n\t}\r\n}\r\n\r\nvar _slice = Array[__PROTOTYPE].slice;\r\nvar __StringProto__ = String[__PROTOTYPE];\r\n\r\nfunction $Slice(arr, start_index, end_index) {\r\n\treturn _slice.call(arr, start_index, end_index);\r\n};\r\n\r\nfunction $Remove(arr, item) {\r\n\tvar index = arr.indexOf(item);\r\n\tindex !== -1 && arr.splice(index, 1);\r\n};\r\n\r\nfunction $HasAndGet(obj, key) {\r\n\treturn obj.hasOwnProperty(key) && obj[key];\r\n};\r\n\r\nvar _hasOwnPro = _GlobalObject.hasOwnProperty;\r\n\r\nfunction $IsOwn(obj, key) {\r\n\treturn _hasOwnPro.call(obj, key);\r\n};\r\n\r\nfunction $InsOf(obj, Con) {\r\n\treturn obj instanceof Con\r\n};\r\n\r\nfunction $IsString(str) {\r\n\treturn typeof str === \"string\"\r\n};\r\n\r\nfunction $IsNumber(num) {\r\n\treturn typeof num === \"number\"\r\n};\r\n\r\nfunction $IsBoolean(bool) {\r\n\treturn typeof bool === \"boolean\"\r\n};\r\n\r\nfunction $UID(prefix) {\r\n\treturn (prefix || \"\") + Math.random().toString(36).substr(2);\r\n};\r\n\r\nvar PROTO = _GlobalFunction();\r\n\r\nfunction $Create(proto) {\r\n\tPROTO[__PROTOTYPE] = proto;\r\n\treturn new PROTO;\r\n};\r\n\r\nfunction $LastItem(arr) {\r\n\treturn arr[arr.length - 1]\r\n};\r\n\r\nfunction noop() { }\r\n\r\n//将字符串反转义,同JSON.stringify(string)\r\nvar charIndexBuggy = \"a\"[0] != \"a\";\r\nvar Escapes = {\r\n\t92: \"\\\\\\\\\",\r\n\t34: '\\\\\"',\r\n\t8: \"\\\\b\",\r\n\t12: \"\\\\f\",\r\n\t10: \"\\\\n\",\r\n\t13: \"\\\\r\",\r\n\t9: \"\\\\t\"\r\n};\r\n\r\nfunction strStringify(value) {\r\n\tvar result = '\"',\r\n\t\tindex = 0,\r\n\t\tlength = value.length,\r\n\t\tuseCharIndex = !charIndexBuggy || length > 10;\r\n\tvar symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\r\n\tfor (; index < length; index++) {\r\n\t\tvar charCode = value.charCodeAt(index);\r\n\t\t// If the character is a control character, append its Unicode or\r\n\t\t// shorthand escape sequence; otherwise, append the character as-is.\r\n\t\tswitch (charCode) {\r\n\t\t\tcase 8:\r\n\t\t\tcase 9:\r\n\t\t\tcase 10:\r\n\t\t\tcase 12:\r\n\t\t\tcase 13:\r\n\t\t\tcase 34:\r\n\t\t\tcase 92:\r\n\t\t\t\tresult += Escapes[charCode];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (charCode < 32) {\r\n\t\t\t\t\tresult += unicodePrefix + toPaddedString(2, charCode.toString(16));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tresult += useCharIndex ? symbols[index] : value.charAt(index);\r\n\t\t}\r\n\t}\r\n\treturn result + '\"';\r\n};\nfunction _ReturnThisV() {\r\n\treturn this.V && this.V.valueOf();\r\n};\r\n\r\nfunction _ReturnThisVString() {\r\n\treturn this.V + \"\";\r\n};\r\n\r\nScope.Base = $Base;\r\n\r\nfunction $Base(obj) {\r\n\treturn $InsOf(obj, $Base) ? obj : _BaseTypeCusMap[typeof obj](obj)\r\n};\r\nvar _BaseTypeCusMap = {\r\n\t\"string\": $String,\r\n\t\"boolean\": $Boolean,\r\n\t\"number\": $Number,\r\n\t\"function\": $Function,\r\n\t\"undefined\": $Undefined,\r\n\t\"object\": function (v) {\r\n\t\treturn (v /*!== null */ ? $Object : $Null)(v)\r\n\t}\r\n};\r\n\r\nvar _$BaseProto = $Base[__PROTOTYPE] = {\r\n\thas: function (key) {\r\n\t\treturn $IsOwn(this.V, key)\r\n\t},\r\n\t//get Property\r\n\tget: function (key, unpack) {\r\n\t\tvar res = this.V[key];\r\n\t\t$InsOf(res, $Base) || (res = $undefined);// if false then\r\n\t\treturn unpack ? res.valueOf() : res\r\n\t},\r\n\t//set Property\r\n\tset: function (key, value) {\r\n\t\treturn this.V[key] = $Base(value);\r\n\t},\r\n\tTypeOf: function () {\r\n\t\treturn this.constructor.TypeofValue;\r\n\t},\r\n\tdestory: function () {\r\n\t\tdelete this.V;\r\n\t},\r\n\t// ===\r\n\tequal: function (obj) {\r\n\t\treturn this.V === ($InsOf(obj, $Base) ? obj.V : obj)\r\n\t},\r\n\tlike: function (obj) {\r\n\t\treturn this.V == ($InsOf(obj, $Base) ? obj.V : obj)\r\n\t}\r\n};\r\n_$BaseProto[__VALUEOF] = _ReturnThisV;\r\n_$BaseProto[__TOSTRING] = _ReturnThisVString;\r\n\r\n\r\nfunction _Undefined_AND_Null_TypeError() {\r\n\tthrow TypeError(\"Cannot convert undefined or null to object\");\r\n};\nglobal.jScope = Scope;\r\n\r\nfunction Scope(ref_obj, options) {\r\n\toptions || (options = {});\r\n\tvar self = this;\r\n\tself.id = $UID(\"SC\");\r\n\tself.E = {}; // events\r\n\tself.C = []; // children local scope 子集\r\n\tself.R = ref_obj || {}; // reference objects 参考对象\r\n\tvar store = options.store;\r\n\tself.O = $InsOf(store, $Object) ? store : $Object($InsOf(store, Object) ? store : {}); // object 作用域的变量集合\r\n\tself.setParent(options.parent); // pare scope 父级\r\n\tself.returner = null; // 这个作用域最后的返回值\r\n\r\n\tself.B = null; // block 块作用域，默认不激活，交给插件处理\r\n\r\n\tvar onerror = options.onerror;\r\n\tif ($InsOf(onerror, _GlobalFunction)) {\r\n\t\tself.on(\"error\", onerror);\r\n\t}\r\n};\r\n\r\nvar __ScopePrototype = Scope.prototype = {};\r\n__ScopePrototype.on = function (eventName, eventHandle) {\r\n\tvar self = this;\r\n\tvar events = self.E;\r\n\t$Push(events[eventName] || (events[eventName] = []), eventHandle);\r\n\treturn self;\r\n};\r\n__ScopePrototype.off = function (eventName, eventHandle) {\r\n\tvar self = this;\r\n\tvar events = self.E;\r\n\t$Remove(events[eventName] || (events[eventName] = []), eventHandle);\r\n\treturn self;\r\n};\r\n__ScopePrototype.emit = function (eventName) {\r\n\tvar self = this;\r\n\tvar eventList = $HasAndGet(self.E, eventName);\r\n\tif (eventList) {\r\n\t\tvar args = arguments.length > 1 && $Slice(arguments, 1);\r\n\t\t$ForEach(eventList, function (handle) {\r\n\t\t\targs ? handle.apply(self, args) : handle.call(this);\r\n\t\t});\r\n\t}\r\n\treturn self;\r\n};\r\n__ScopePrototype.getTopScope = function () {\r\n\tvar res = this;\r\n\twhile (res.P) {\r\n\t\tres = res.P\r\n\t}\r\n\treturn res;\r\n}\r\n\r\n__ScopePrototype.push = function (scope_name) {\r\n\tvar self = this;\r\n\tvar child_scope = new Scope({}, {\r\n\t\tparent: self\r\n\t});\r\n\t$Push(self.C, child_scope);\r\n\r\n\tC_SP = child_scope;\r\n\treturn child_scope;\r\n};\r\n__ScopePrototype.pop = function (returner) {\r\n\tvar self = this;\r\n\tvar csp = $LastItem(self.C);\r\n\treturn csp && csp.destroy(returner);\r\n};\r\n\r\n__ScopePrototype.setParent = function (parent) {\r\n\tvar self = this;\r\n\tif (self.P = parent || null) {\r\n\t\tself.get = _ScopeNormalGet;\r\n\t\tself.set = _ScopeNormalSet;\r\n\t\tself.TypeOf = _ScopeNormalTypeOf;\r\n\t\tself.Del = _ScopeNormalDel;\r\n\t} else {\r\n\t\tself.get = _ScopeTopGet;\r\n\t\tself.set = _ScopeTopSet;\r\n\t\tself.TypeOf = _ScopeTopTypeOf;\r\n\t\tself.Del = _ScopeTopDel;\r\n\t}\r\n};\r\n__ScopePrototype.get = _ScopeNormalGet;\r\n\r\n/*\r\n * unpack: 是否解包，如果解包取出的对象默认是原生的JS对象，如果封包取出，则是内部存储的对象\r\n */\r\n/*GET*/\r\nfunction _ScopeNormalGet(key, unpack) {\r\n\tvar self = this;\r\n\tvar res = (self.O.has(key) ? self.O : self.P).get(key, unpack);\r\n\tif ($InsOf(res, $$Function) && res.T === self.O && !res.S) {// 修正函数对象的this指向\r\n\t\tres.T = self.getTopScope().O\r\n\t}\r\n\treturn res;\r\n};\r\n\r\nfunction _ScopeTopGet(key, unpack) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.get(key, unpack);\r\n};\r\n__ScopePrototype.set = _ScopeNormalSet;\r\n/*SET*/\r\nfunction _ScopeNormalSet(key, value) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).set(key, value);\r\n};\r\n\r\nfunction _ScopeTopSet(key, value) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.set(key, value);\r\n};\r\n__ScopePrototype.Var = _ScopeTopSet;\r\n/*TYPEOF*/\r\nfunction _ScopeNormalTypeOf(key) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).TypeOf(key);\r\n};\r\n\r\nfunction _ScopeTopTypeOf(key) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.TypeOf(key);\r\n};\r\n__ScopePrototype.TypeOf = _ScopeTopTypeOf;\r\n/*DELETE*/\r\nfunction _ScopeNormalDel(key) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).Del(key);\r\n};\r\n\r\nfunction _ScopeTopDel(key) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.Del(key);\r\n};\r\n__ScopePrototype.Del = _ScopeTopDel;\r\n\r\n// destroy 销毁作用域\r\n__ScopePrototype.destroy = function (returner) {\r\n\tvar self = this;\r\n\t// 注销事件监听\r\n\tself.E = null;\r\n\t// 销毁子集作用域\r\n\t$ForEach(self.C, function (csp) {\r\n\t\tcsp.destroy()\r\n\t});\r\n\tself.C = null;\r\n\t// 移除参考对象\r\n\tself.R = null;\r\n\t// 断开对象的引用，由系统垃圾回收器来进行回收\r\n\tself.O = null;\r\n\t// 断开与父级的关联\r\n\tif (self.P) {\r\n\t\tC_SP = self.P;\r\n\t\t$Remove(C_SP.C, self);\r\n\t\tself.P = null;\r\n\t}\r\n\r\n\t// 禁用这个作用域对象的所有方法。\r\n\tfor (var funName in __ScopePrototype) {\r\n\t\tself[funName] = _DestroyedHandle;\r\n\t}\r\n\r\n\tself.returner = returner;\r\n\treturn returner; // 直接返回返回值而不是被销毁的作用域。让作用域被CG直接回收\r\n};\r\n\r\nfunction _DestroyedHandle() {\r\n\tthrow ReferenceError(\"Scope objects has been destroyed.\");\r\n};\r\n\r\n\r\nvar C_SP = Scope.global = new Scope(global); //current Scope\r\n\r\nScope.current = function () {\r\n\treturn C_SP\r\n};\nScope.Boolean = $Boolean;\r\nfunction $$Boolean(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Boolean.TypeofValue = \"string\"\r\n\r\nvar __$$BooleanProperty = $$Boolean[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n/*\r\n * true false 是系统常量\r\n */\r\n$true = new $$Boolean(TRUE);\r\n$false = new $$Boolean(FALSE);\r\n\r\nfunction $Boolean(v) {\r\n\treturn v ? $true : $false\r\n};\nScope.Function = $Function;\r\n\r\nfunction $$Function(fun, args) {\r\n\tthis.V = fun;\r\n\tthis.T = null; // 临时的this对象\r\n\tthis.S = null; // bind函数所绑定的super this对象 \r\n};\r\n\r\n$$Function.TypeofValue = \"function\"\r\n\r\nvar __$$FunctionProperty = $$Function[__PROTOTYPE] = $Create(_$BaseProto);\r\n__$$FunctionProperty.run = function () {\r\n\tvar self = this;\r\n\tvar args = $Slice(arguments);\r\n\tself.V.apply(self.S || self.T, args);\r\n};\r\n\r\nfunction $Function(fun, args) {\r\n\treturn new $$Function(fun, args)\r\n};\nScope.Null = $Null;\r\nfunction $$Null(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Null.TypeofValue = \"object\";\r\n\r\nvar __$$NullProperty = $$Null[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$NullProperty[__VALUEOF] = _Undefined_AND_Null_TypeError;\r\n__$$NullProperty[__TOSTRING] = _Undefined_AND_Null_TypeError;\r\n/*\r\n * null是一个系统常量\r\n */\r\nvar $null = new $$Null(null);\r\n\r\nfunction $Null() {\r\n\treturn $null\r\n};\nScope.Number = $Number;\r\n\r\nfunction $$Number(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Number.TypeofValue = \"number\"\r\n\r\nvar __$$NumberProperty = $$Number[__PROTOTYPE] = $Create(_$BaseProto);\r\n/*\r\n * 系统常量\r\n */\r\nvar $NaN = new $$Number(NaN);\r\n$NaN.equal = function () { // any value including NaN, 所以直接返回false\r\n\treturn FALSE\r\n};\r\nvar $Infinity = new $$Number(Infinity);\r\nvar $_Infinity = new $$Number(-Infinity);\r\n\r\nfunction $Number(v) {\r\n\tvar self;\r\n\tif (isNaN(v)) {\r\n\t\tself = $NaN;\r\n\t} else if (v === Infinity) {\r\n\t\tself = $Infinity\r\n\t} else if (v === -Infinity) {\r\n\t\tself = $_Infinity\r\n\t} else {\r\n\t\tself = new $$Number(v);\r\n\t}\r\n\treturn self\r\n};\nScope.Object = $Object;\r\n\r\nfunction $$Object(v) {\r\n\tthis.V = v || {};\r\n\tthis.G = null; //getter\r\n\tthis.S = null; //setter\r\n\tthis.C = {}; //config\r\n};\r\n$$Object.getProp = function (obj, key) {\r\n\tif ($InsOf(obj, $$Object) || $InsOf(obj, $String) || $InsOf(obj, $Number)) { //可用属性名进行优化\r\n\t\tvar res = obj.get(key)\r\n\t} else if (obj) {\r\n\t\tres = obj[key]\r\n\t}\r\n\treturn res;\r\n};\r\n\r\n$$Object.TypeofValue = \"object\"\r\n\r\nfunction _$$Object_Mix_HasProp(key) {\r\n\tvar self = this;\r\n\treturn $IsOwn(self.V, key) || $IsOwn(self.G, key) || $IsOwn(self.S, key);\r\n};\r\n\r\nfunction _$$Object_Mix_GetProp(key) {\r\n\tvar self = this;\r\n\tvar getter = self.G;\r\n\tvar value = self.V;\r\n\tif ($IsOwn(getter, key)) {\r\n\t\tvar res = getter[key].call(value, key)\r\n\t} else {\r\n\t\tres = value[key]\r\n\t}\r\n\treturn res\r\n};\r\n\r\nfunction _$$Object_Mix_SetProp(key, data, config) {\r\n\tvar self = this;\r\n\tvar setter = self.S;\r\n\tvar value = self.V;\r\n\tif ($IsOwn(setter, key)) {\r\n\t\tsetter[key].call(value, key, data)\r\n\t} else {\r\n\t\tvar config = self.C;\r\n\t\t/*TODO:根据config判断对象是否可被重写*/\r\n\t\tconfig[key] = config;\r\n\t\tvalue[key] = data\r\n\t}\r\n\treturn data\r\n};\r\n\r\nvar __$$ObjectProperty = $$Object[__PROTOTYPE] = $Create(_$BaseProto);\r\n__$$ObjectProperty.has = function (key) {\r\n\treturn $IsOwn(this.C, key)\r\n};\r\nfunction assignPropConfig(old_config, new_config) {\r\n\tnew_config || (new_config = {});\r\n\tvar res_config = {};\r\n\t$ForEach([\r\n\t\t\"enumerable\",\r\n\t\t\"configurable\",\r\n\t\t\"writable\"\r\n\t], function (key) {\r\n\t\tres_config[key] = !!($IsOwn(new_config, key) ? new_config : old_config)[key]\r\n\t});\r\n\treturn res_config;\r\n};\r\n\r\nvar _DefaultPropConfig = {\r\n\twritable: TRUE,\r\n\tenumerable: TRUE,\r\n\tconfigurable: TRUE\r\n};\r\n\r\n//get Property\r\n__$$ObjectProperty.get = function (key, unpack) {\r\n\tvar self = this;\r\n\tif (self.has(key)) {\r\n\t\tvar res = self.G && $IsOwn(self.G, key) ? self.G[key].call(self, key) : self.V[key];\r\n\t} else {\r\n\t\tres = $undefined\r\n\t}\r\n\tres = unpack ? (res ? res.valueOf() : res) : $Base(res);\r\n\tif ($InsOf(res, $$Function)) {\r\n\t\tres.T = self;// 指定属性拥有着，从而function能有this对象\r\n\t}\r\n\treturn res;\r\n};\r\n//set Property\r\n__$$ObjectProperty.set = function (key, value) {\r\n\tvar self = this;\r\n\t/*TODO:根据config判断对象是否可被重写*/\r\n\tvar old_config = self.C[key];\r\n\tif (old_config && ((!old_config.writable && $IsOwn(self.V, key)) || !old_config.configurable)) {\r\n\t\treturn\r\n\t}\r\n\t// 普通的变量定义，初始化默认的config\r\n\t$IsOwn(self.C, key) || (self.C[key] = assignPropConfig(_DefaultPropConfig));\r\n\tvar V = $Base(value);\r\n\tself.S && $IsOwn(self.S, key) ? self.S[key].call(self, value, key) : (self.V[key] = value);\r\n\r\n\treturn V;\r\n};\r\n//define getter\r\n__$$ObjectProperty.defGet = function (key, handle, new_config) {\r\n\tvar self = this;\r\n\tvar getter = self.G || (self.G = {});\r\n\tvar old_config = self.C;\r\n\tif (!(handle instanceof Function)) {\r\n\t\tthrow TypeError(\"getter must be an function.\")\r\n\t}\r\n\t/*判断对象是否可被重写*/\r\n\tvar old_config = config[key] || _DefaultPropConfig;\r\n\tif (!old_config.configurable) {\r\n\t\treturn;\r\n\t}\r\n\tconfig[key] = assignPropConfig(old_config, new_config);\r\n\r\n\tgetter[key] = handle;\r\n\tdelete self.V[key];\r\n\tself.get = _$$Object_Mix_GetProp;\r\n\tself.has = _$$Object_Mix_HasProp;\r\n};\r\n//define setter\r\n__$$ObjectProperty.defSet = function (key, handle, new_config) {\r\n\tvar self = this;\r\n\tvar setter = self.S || (self.S = {});\r\n\tvar config = self.C;\r\n\tif (!(handle instanceof Function)) {\r\n\t\tthrow TypeError(\"setter must be an function.\")\r\n\t}\r\n\t/*判断对象是否可被重写*/\r\n\tvar old_config = config[key] || _DefaultPropConfig;\r\n\tif (!old_config.configurable) {\r\n\t\treturn;\r\n\t}\r\n\tconfig[key] = assignPropConfig(old_config, new_config);\r\n\r\n\tsetter[key] = handle;\r\n\tdelete self.V[key];\r\n\tself.set = _$$Object_Mix_SetProp;\r\n\tself.has = _$$Object_Mix_HasProp;\r\n};\r\n__$$ObjectProperty.def = function (key, new_config) {\r\n\tif (!new_config) {\r\n\t\treturn\r\n\t}\r\n\r\n\tvar self = this;\r\n\tvar value = self.V;\r\n\tvar config = self.C || {};\r\n\r\n\t/*判断对象是否可被重写*/\r\n\tvar old_config = config[key] || _DefaultPropConfig;\r\n\tif (!old_config.configurable) {\r\n\t\treturn;\r\n\t}\r\n\tconfig[key] = assignPropConfig(old_config, new_config);\r\n\r\n\tif ($IsOwn(value, key) && old_config.writable) {\r\n\t\tif ($IsOwn(config, value)) {\r\n\t\t\tvalue[key] = config.value\r\n\t\t}\r\n\t} else if (old_config.configurable) {\r\n\t\tif ($InsOf(new_config.get, _GlobalFunction)) {\r\n\t\t\tvar getter = self.G || (self.G = {});\r\n\t\t\tgetter[key] = new_config.get;\r\n\t\t}\r\n\t\tif ($InsOf(new_config.set, _GlobalFunction)) {\r\n\t\t\tvar setter = self.S || (self.S = {});\r\n\t\t\tsetter[key] = new_config.set;\r\n\t\t}\r\n\t}\r\n\treturn self;\r\n};\r\n__$$ObjectProperty.Del = function (key) {\r\n\tvar self = this;\r\n\tvar config = self.C;\r\n\tvar value = self.V;\r\n\tvar getter = self.G;\r\n\tvar setter = self.S;\r\n\tvar res = TRUE;\r\n\tif ($IsOwn(config, key)) {\r\n\t\t/*TODO:根据config判断对象是否可被删除*/\r\n\t\t// res = config[key]\r\n\t\tgetter && delete getter[key];\r\n\t\tsetter && delete setter[key];\r\n\t\tdelete value[key];\r\n\t\tdelete config[key];\r\n\t}\r\n\treturn res\r\n};\r\n\r\nfunction $Object(v) {\r\n\treturn v === null ? $null : new $$Object(v);\r\n};\nScope.String = $String;\r\n\r\nfunction $$String(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$String.TypeofValue = \"string\"\r\n\r\nvar __$$StringPrototype = $$String[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$StringPrototype.get = function (key) {\r\n\tvar self = this;\r\n\tvar value = self.V;\r\n\tif (isFinite(key) && key % 1 === 0) {\r\n\t\tvar res = value.charAt(key)\r\n\t} else {\r\n\t\tres = value[key]\r\n\t}\r\n\treturn res\r\n};\r\n__$$StringPrototype.set = function (key, obj) {\r\n\tvar self = this;\r\n\tvar value = self.V;\r\n\tif (!(isFinite(key) && key % 1 === 0)) {\r\n\t\tvalue[key] = obj\r\n\t}\r\n\treturn obj\r\n};\r\n\r\nfunction $String(v) {\r\n\treturn new $$String(v)\r\n};\nScope.Undefined = $Undefined;\r\nfunction $$Undefined(v) {\r\n\tthis.V = v;\r\n};\r\n$$Undefined.TypeofValue = \"undefined\";\r\n\r\nvar __$$UndefinedProperty = $$Undefined[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$UndefinedProperty[__VALUEOF] = _Undefined_AND_Null_TypeError;\r\n__$$UndefinedProperty[__TOSTRING] = _Undefined_AND_Null_TypeError;\r\n\r\n/*\r\n * undefined是一个系统常量\r\n */\r\nvar $undefined = new $$Undefined();\r\n\r\nfunction $Undefined() {\r\n\treturn $undefined\r\n};\n}));"],"sourceRoot":"/source/"}