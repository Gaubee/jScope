{"version":3,"sources":["/source/jScope.min.js","jScope.min.js"],"names":["_ReturnThisV","factory","define","amd","root","exports","module","global","window","this","$Push","arr","item","length","$ForEach","cb","i","len","$Slice","start_index","end_index","_slice","call","$Remove","index","indexOf","splice","$HasAndGet","obj","key","hasOwnProperty","$IsOwnPro","_hasOwnPro","$InsOf","Con","$UID","prefix","Math","random","toString","substr","$Create","proto","PROTO","__PROTOTYPE","$LastItem","V","valueOf","_ReturnThisVString","$Base","_BaseTypeCusMap","_Undefined_AND_Null_TypeError","TypeError","Scope","ref_obj","options","self","id","E","C","R","store","O","$Object","Object","setParent","parent","returner","B","onerror","_GlobalFunction","on","_ScopeNormalGet","unpack","has","P","get","_ScopeTopGet","_ScopeNormalSet","value","set","_ScopeTopSet","_ScopeNormalTypeOf","TypeOf","_ScopeTopTypeOf","_ScopeNormalDel","Del","_ScopeTopDel","_DestroyedHandle","ReferenceError","$$Boolean","v","$Boolean","$true","$false","$$Function","fun","args","A","$Function","$$Null","$Null","$null","$$Number","$Number","isNaN","$NaN","Infinity","$Infinity","$_Infinity","$$Object","G","S","_$$Object_Mix_HasProp","_$$Object_Mix_GetProp","getter","res","_$$Object_Mix_SetProp","data","config","setter","$$String","$String","$$Undefined","$Undefined","$undefined","__VALUEOF","__TOSTRING","Function","TRUE","FALSE","Array","slice","String","Base","string","boolean","number","function","undefined","object","_$BaseProto","constructor","TypeofValue","destory","equal","like","jScope","__ScopePrototype","prototype","eventName","eventHandle","events","off","emit","eventList","arguments","handle","apply","push","scope_name","child_scope","C_SP","pop","csp","destroy","Var","funName","current","Boolean","__$$FunctionProperty","run","ctx","Null","__$$NullProperty","Number","NaN","getProp","__$$ObjectProperty","defGet","defSet","__$$StringPrototype","isFinite","charAt","Undefined","__$$UndefinedProperty"],"mappings":"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","file":"jScope.min.js","sourcesContent":["(function(root, factory) {\r\n\t\tif (typeof define === 'function' && define.amd) {\r\n\t\t\tdefine([], function() {\r\n\t\t\t\treturn factory(root);\r\n\t\t\t});\r\n\t\t} else if (typeof exports === 'object') {\r\n\t\t\tfactory(module.exports);\r\n\t\t} else {\r\n\t\t\tfactory(root);\r\n\t\t}\r\n\t}(typeof global != 'undefined' ? global : typeof window != 'undefined' ? window : this, function(global) {\n/*\r\n * 更好的压缩率\r\n */\r\nvar __PROTOTYPE = \"prototype\";\r\nvar __VALUEOF = \"valueOf\";\r\nvar __TOSTRING = \"toString\";\r\nvar void_0;\r\nvar _GlobalFunction = Function;\r\n\r\nvar TRUE = true;\r\nvar FALSE = false;\r\nvar NULL = null;\r\nvar UNDEFINED;\r\n// var NAN = NaN;\r\n// var INFINITY = Infinity;\r\n\r\nfunction $Push(arr, item) {\r\n\tarr[arr.length] = item;\r\n\treturn arr\r\n}\r\n\r\nfunction $ForEach(arr, cb) {\r\n\tfor (var i = 0, len = arr.length; i < len; i += 1) {\r\n\t\tcb(arr[i], i)\r\n\t}\r\n}\r\n\r\nfunction $Map(arr, cb) {\r\n\tfor (var i = 0, len = arr.length, res = []; i < len; i += 1) {\r\n\t\t$Push(res, cb(arr[i], i))\r\n\t}\r\n\treturn res\r\n}\r\n\r\nvar _slice = Array[__PROTOTYPE].slice;\r\nvar __StringProto__ = String[__PROTOTYPE];\r\n\r\nfunction $Slice(arr, start_index, end_index) {\r\n\treturn _slice.call(arr, start_index, end_index);\r\n};\r\n\r\nfunction $Remove(arr, item) {\r\n\tvar index = arr.indexOf(item);\r\n\tindex !== -1 && arr.splice(index, 1);\r\n};\r\n\r\nfunction $HasAndGet(obj, key) {\r\n\treturn obj.hasOwnProperty(key) && obj[key];\r\n};\r\n\r\nvar _hasOwnPro = global.hasOwnProperty;\r\n\r\nfunction $IsOwnPro(obj, key) {\r\n\treturn _hasOwnPro.call(obj, key);\r\n};\r\n\r\nfunction $InsOf(obj, Con) {\r\n\treturn obj instanceof Con\r\n};\r\n\r\nfunction $UID(prefix) {\r\n\treturn (prefix || \"\") + Math.random().toString(36).substr(2);\r\n};\r\n\r\nvar PROTO = _GlobalFunction();\r\n\r\nfunction $Create(proto) {\r\n\tPROTO[__PROTOTYPE] = proto;\r\n\treturn new PROTO;\r\n};\r\n\r\nfunction $LastItem(arr) {\r\n\treturn arr[arr.length - 1]\r\n};\r\n\r\nfunction noop() {}\r\n\r\n//将字符串反转义,同JSON.stringify(string)\r\nvar charIndexBuggy = \"a\" [0] != \"a\";\r\nvar Escapes = {\r\n\t92: \"\\\\\\\\\",\r\n\t34: '\\\\\"',\r\n\t8: \"\\\\b\",\r\n\t12: \"\\\\f\",\r\n\t10: \"\\\\n\",\r\n\t13: \"\\\\r\",\r\n\t9: \"\\\\t\"\r\n};\r\n\r\nfunction strStringify(value) {\r\n\tvar result = '\"',\r\n\t\tindex = 0,\r\n\t\tlength = value.length,\r\n\t\tuseCharIndex = !charIndexBuggy || length > 10;\r\n\tvar symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\r\n\tfor (; index < length; index++) {\r\n\t\tvar charCode = value.charCodeAt(index);\r\n\t\t// If the character is a control character, append its Unicode or\r\n\t\t// shorthand escape sequence; otherwise, append the character as-is.\r\n\t\tswitch (charCode) {\r\n\t\t\tcase 8:\r\n\t\t\tcase 9:\r\n\t\t\tcase 10:\r\n\t\t\tcase 12:\r\n\t\t\tcase 13:\r\n\t\t\tcase 34:\r\n\t\t\tcase 92:\r\n\t\t\t\tresult += Escapes[charCode];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (charCode < 32) {\r\n\t\t\t\t\tresult += unicodePrefix + toPaddedString(2, charCode.toString(16));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tresult += useCharIndex ? symbols[index] : value.charAt(index);\r\n\t\t}\r\n\t}\r\n\treturn result + '\"';\r\n};\nfunction _ReturnThisV() {\r\n\treturn this.V && this.V.valueOf();\r\n};\r\n\r\nfunction _ReturnThisVString() {\r\n\treturn this.V + \"\";\r\n};\r\n\r\nScope.Base = $Base;\r\n\r\nfunction $Base(obj) {\r\n\treturn $InsOf(obj, $Base) ? obj : _BaseTypeCusMap[typeof obj](obj)\r\n};\r\nvar _BaseTypeCusMap = {\r\n\t\"string\": $String,\r\n\t\"boolean\": $Boolean,\r\n\t\"number\": $Number,\r\n\t\"function\": $Function,\r\n\t\"undefined\": $Undefined,\r\n\t\"object\": function (v) {\r\n\t\treturn (v /*!== null */ ? $Object : $Null)(v)\r\n\t}\r\n};\r\n\r\nvar _$BaseProto = $Base[__PROTOTYPE] = {\r\n\thas: function (key) {\r\n\t\treturn $IsOwnPro(this.V, key)\r\n\t},\r\n\t//get Property\r\n\tget: function (key, unpack) {\r\n\t\tvar res = this.V[key];\r\n\t\t$InsOf(res, $Base) || (res = $undefined);// if false then\r\n\t\treturn unpack ? res.valueOf() : res\r\n\t},\r\n\t//set Property\r\n\tset: function (key, value) {\r\n\t\treturn this.V[key] = $Base(value);\r\n\t},\r\n\tTypeOf: function () {\r\n\t\treturn this.constructor.TypeofValue;\r\n\t},\r\n\tdestory: function () {\r\n\t\tdelete this.V;\r\n\t},\r\n\t// ===\r\n\tequal: function (obj) {\r\n\t\treturn this.V === ($InsOf(obj, $Base) ? obj.V : obj)\r\n\t},\r\n\tlike: function (obj) {\r\n\t\treturn this.V == ($InsOf(obj, $Base) ? obj.V : obj)\r\n\t}\r\n};\r\n_$BaseProto[__VALUEOF] = _ReturnThisV;\r\n_$BaseProto[__TOSTRING] = _ReturnThisVString; \r\n\r\n\r\nfunction _Undefined_AND_Null_TypeError() {\r\n\tthrow TypeError(\"Cannot convert undefined or null to object\");\r\n};\nglobal.jScope = Scope;\r\n\r\nfunction Scope(ref_obj, options) {\r\n\toptions || (options = {});\r\n\tvar self = this;\r\n\tself.id = $UID(\"SC\");\r\n\tself.E = {}; // events\r\n\tself.C = []; // children local scope 子集\r\n\tself.R = ref_obj || {}; // reference objects 参考对象\r\n\tvar store = options.store;\r\n\tself.O = $InsOf(store, $Object) ? store : $Object($InsOf(store, Object) ? store : {}); // object 作用域的变量集合\r\n\tself.setParent(options.parent); // pare scope 父级\r\n\tself.returner = null; // 这个作用域最后的返回值\r\n\r\n\tself.B = null; // block 块作用域，默认不激活，交给插件处理\r\n\r\n\tvar onerror = options.onerror;\r\n\tif ($InsOf(onerror, _GlobalFunction)) {\r\n\t\tself.on(\"error\", onerror);\r\n\t}\r\n};\r\n\r\nvar __ScopePrototype = Scope.prototype = {};\r\n__ScopePrototype.on = function (eventName, eventHandle) {\r\n\tvar self = this;\r\n\tvar events = self.E;\r\n\t$Push(events[eventName] || (events[eventName] = []), eventHandle);\r\n\treturn self;\r\n};\r\n__ScopePrototype.off = function (eventName, eventHandle) {\r\n\tvar self = this;\r\n\tvar events = self.E;\r\n\t$Remove(events[eventName] || (events[eventName] = []), eventHandle);\r\n\treturn self;\r\n};\r\n__ScopePrototype.emit = function (eventName) {\r\n\tvar self = this;\r\n\tvar eventList = $HasAndGet(self.E, eventName);\r\n\tif (eventList) {\r\n\t\tvar args = arguments.length > 1 && $Slice(arguments, 1);\r\n\t\t$ForEach(eventList, function (handle) {\r\n\t\t\targs ? handle.apply(self, args) : handle.call(this);\r\n\t\t});\r\n\t}\r\n\treturn self;\r\n};\r\n\r\n__ScopePrototype.push = function (scope_name) {\r\n\tvar self = this;\r\n\tvar child_scope = new Scope({}, {\r\n\t\tparent: self\r\n\t});\r\n\t$Push(self.C, child_scope);\r\n\r\n\tC_SP = child_scope;\r\n\treturn child_scope;\r\n};\r\n__ScopePrototype.pop = function (returner) {\r\n\tvar self = this;\r\n\tvar csp = $LastItem(self.C);\r\n\treturn csp && csp.destroy(returner);\r\n};\r\n\r\n__ScopePrototype.setParent = function (parent) {\r\n\tvar self = this;\r\n\tif (self.P = parent || null) {\r\n\t\tself.get = _ScopeNormalGet;\r\n\t\tself.set = _ScopeNormalSet;\r\n\t\tself.TypeOf = _ScopeNormalTypeOf;\r\n\t\tself.Del = _ScopeNormalDel;\r\n\t} else {\r\n\t\tself.get = _ScopeTopGet;\r\n\t\tself.set = _ScopeTopSet;\r\n\t\tself.TypeOf = _ScopeTopTypeOf;\r\n\t\tself.Del = _ScopeTopDel;\r\n\t}\r\n};\r\n__ScopePrototype.get = _ScopeNormalGet;\r\n\r\n/*\r\n * unpack: 是否解包，如果解包取出的对象默认是原生的JS对象，如果封包取出，则是内部存储的对象\r\n */\r\n/*GET*/\r\nfunction _ScopeNormalGet(key, unpack) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).get(key, unpack);\r\n};\r\n\r\nfunction _ScopeTopGet(key, unpack) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.get(key, unpack);\r\n};\r\n__ScopePrototype.set = _ScopeNormalSet;\r\n/*SET*/\r\nfunction _ScopeNormalSet(key, value) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).set(key, value);\r\n};\r\n\r\nfunction _ScopeTopSet(key, value) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.set(key, value);\r\n};\r\n__ScopePrototype.Var = _ScopeTopSet;\r\n/*TYPEOF*/\r\nfunction _ScopeNormalTypeOf(key) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).TypeOf(key);\r\n};\r\n\r\nfunction _ScopeTopTypeOf(key) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.TypeOf(key);\r\n};\r\n__ScopePrototype.TypeOf = _ScopeTopTypeOf;\r\n/*DELETE*/\r\nfunction _ScopeNormalDel(key) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).Del(key);\r\n};\r\n\r\nfunction _ScopeTopDel(key) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.Del(key);\r\n};\r\n__ScopePrototype.Del = _ScopeTopDel;\r\n\r\n// destroy 销毁作用域\r\n__ScopePrototype.destroy = function (returner) {\r\n\tvar self = this;\r\n\t// 注销事件监听\r\n\tself.E = null;\r\n\t// 销毁子集作用域\r\n\t$ForEach(self.C, function (csp) {\r\n\t\tcsp.destroy()\r\n\t});\r\n\tself.C = null;\r\n\t// 移除参考对象\r\n\tself.R = null;\r\n\t// 断开对象的引用，由系统垃圾回收器来进行回收\r\n\tself.O = null;\r\n\t// 断开与父级的关联\r\n\tif (self.P) {\r\n\t\tC_SP = self.P;\r\n\t\t$Remove(C_SP.C, self);\r\n\t\tself.P = null;\r\n\t}\r\n\r\n\t// 禁用这个作用域对象的所有方法。\r\n\tfor (var funName in __ScopePrototype) {\r\n\t\tself[funName] = _DestroyedHandle;\r\n\t}\r\n\r\n\tself.returner = returner;\r\n\treturn returner; // 直接返回返回值而不是被销毁的作用域。让作用域被CG直接回收\r\n};\r\n\r\nfunction _DestroyedHandle() {\r\n\tthrow ReferenceError(\"Scope objects has been destroyed.\");\r\n};\r\n\r\n\r\nvar C_SP = Scope.global = new Scope(global); //current Scope\r\n\r\nScope.current = function () {\r\n\treturn C_SP\r\n};\nScope.Boolean = $Boolean;\r\nfunction $$Boolean(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Boolean.TypeofValue = \"string\"\r\n\r\nvar __$$BooleanProperty = $$Boolean[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n/*\r\n * true false 是系统常量\r\n */\r\n$true = new $$Boolean(TRUE);\r\n$false = new $$Boolean(FALSE);\r\n\r\nfunction $Boolean(v) {\r\n\treturn v ? $true : $false\r\n};\nScope.Function = $Function;\r\n\r\nfunction $$Function(fun, args) {\r\n\tthis.V = fun;\r\n\tthis.A = args;\r\n};\r\n\r\n$$Function.TypeofValue = \"function\"\r\n\r\nvar __$$FunctionProperty = $$Function[__PROTOTYPE] = $Create(_$BaseProto);\r\n__$$FunctionProperty.run = function (ctx, args) {\r\n\tvar self = this;\r\n\tself.V.apply(ctx, args);\r\n};\r\n\r\nfunction $Function(fun, args) {\r\n\treturn $$Function(fun, args)\r\n};\nScope.Null = $Null;\r\nfunction $$Null(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Null.TypeofValue = \"object\";\r\n\r\nvar __$$NullProperty = $$Null[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$NullProperty[__VALUEOF] = _Undefined_AND_Null_TypeError;\r\n__$$NullProperty[__TOSTRING] = _Undefined_AND_Null_TypeError;\r\n/*\r\n * null是一个系统常量\r\n */\r\nvar $null = new $$Null(null);\r\n\r\nfunction $Null() {\r\n\treturn $null\r\n};\nScope.Number = $Number;\r\n\r\nfunction $$Number(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Number.TypeofValue = \"number\"\r\n\r\nvar __$$NumberProperty = $$Number[__PROTOTYPE] = $Create(_$BaseProto);\r\n/*\r\n * 系统常量\r\n */\r\nvar $NaN = new $$Number(NaN);\r\n$NaN.equal = function () { // any value including NaN, 所以直接返回false\r\n\treturn FALSE\r\n};\r\nvar $Infinity = new $$Number(Infinity);\r\nvar $_Infinity = new $$Number(-Infinity);\r\n\r\nfunction $Number(v) {\r\n\tvar self;\r\n\tif (isNaN(v)) {\r\n\t\tself = $NaN;\r\n\t} else if (v === Infinity) {\r\n\t\tself = $Infinity\r\n\t} else if (v === -Infinity) {\r\n\t\tself = $_Infinity\r\n\t} else {\r\n\t\tself = new $$Number(v);\r\n\t}\r\n\treturn self\r\n};\nScope.Object = $Object;\r\n\r\nfunction $$Object(v) {\r\n\tthis.V = v;\r\n\tthis.G = null; //getter\r\n\tthis.S = null; //setter\r\n\tthis.C = {}; //config\r\n};\r\n$$Object.getProp = function (obj, key) {\r\n\tif ($InsOf(obj, $$Object) || $InsOf(obj, $String) || $InsOf(obj, $Number)) { //可用属性名进行优化\r\n\t\tvar res = obj.get(key)\r\n\t} else if (obj) {\r\n\t\tres = obj[key]\r\n\t}\r\n\treturn res;\r\n};\r\n\r\n$$Object.TypeofValue = \"object\"\r\n\r\nfunction _$$Object_Mix_HasProp(key) {\r\n\tvar self = this;\r\n\treturn $IsOwnPro(self.V, key) || $IsOwnPro(self.G, key) || $IsOwnPro(self.S, key);\r\n};\r\n\r\nfunction _$$Object_Mix_GetProp(key) {\r\n\tvar self = this;\r\n\tvar getter = self.G;\r\n\tvar value = self.V;\r\n\tif ($IsOwnPro(getter, key)) {\r\n\t\tvar res = getter[key].call(value, key)\r\n\t} else {\r\n\t\tres = value[key]\r\n\t}\r\n\treturn res\r\n};\r\n\r\nfunction _$$Object_Mix_SetProp(key, data, config) {\r\n\tvar self = this;\r\n\tvar setter = self.S;\r\n\tvar value = self.V;\r\n\tif ($IsOwnPro(setter, key)) {\r\n\t\tsetter[key].call(value, key, data)\r\n\t} else {\r\n\t\tvar config = self.C;\r\n\t\t/*TODO:根据config判断对象是否可被重写*/\r\n\t\tconfig[key] = config;\r\n\t\tvalue[key] = data\r\n\t}\r\n\treturn data\r\n};\r\n\r\nvar __$$ObjectProperty = $$Object[__PROTOTYPE] = $Create(_$BaseProto);\r\n__$$ObjectProperty.has = function (key) {\r\n\treturn $IsOwnPro(this.C, key)\r\n};\r\n//get Property\r\n__$$ObjectProperty.get = function (key, unpack) {\r\n\tvar self = this;\r\n\tif (self.has(key)) {\r\n\t\tvar res = self.G && $IsOwnPro(self.G, key) ? self.G[key].call(self.V) : self.V[key];\r\n\t} else {\r\n\t\tres = $undefined\r\n\t}\r\n\treturn unpack ? (res ? res.valueOf() : res) : $Base(res)\r\n};\r\n//set Property\r\n__$$ObjectProperty.set = function (key, value, config) {\r\n\tvar self = this;\r\n\t/*TODO:根据config判断对象是否可被重写*/\r\n\tself.C[key] = config;\r\n\tvalue = $Base(value);\r\n\tself.S && $IsOwnPro(self.S, key) ? self.S[key].call(self.V, value) : (self.V[key] = value);\r\n\treturn value;\r\n};\r\n//define getter\r\n__$$ObjectProperty.defGet = function (key, handle, config) {\r\n\tvar self = this;\r\n\tvar getter = self.G || (self.G = {});\r\n\tvar config = self.C;\r\n\tif (!(handle instanceof Function)) {\r\n\t\tthrow TypeError(\"getter must be an function.\")\r\n\t}\r\n\t/*TODO:根据config判断对象是否可被重写*/\r\n\tconfig[key] = config;\r\n\tgetter[key] = handle;\r\n\tself.get = _$$Object_Mix_GetProp;\r\n\tself.has = _$$Object_Mix_HasProp;\r\n};\r\n//define setter\r\n__$$ObjectProperty.defSet = function (key, handle, config) {\r\n\tvar self = this;\r\n\tvar setter = self.S || (self.S = {});\r\n\tvar config = self.C;\r\n\tif (!(handle instanceof Function)) {\r\n\t\tthrow TypeError(\"setter must be an function.\")\r\n\t}\r\n\t/*TODO:根据config判断对象是否可被重写*/\r\n\tconfig[key] = config;\r\n\tsetter[key] = handle;\r\n\tself.set = _$$Object_Mix_SetProp;\r\n\tself.has = _$$Object_Mix_HasProp;\r\n};\r\n__$$ObjectProperty.Del = function (key) {\r\n\tvar self = this;\r\n\tvar config = self.C;\r\n\tvar value = self.V;\r\n\tvar getter = self.G;\r\n\tvar setter = self.S;\r\n\tvar res = TRUE;\r\n\tif ($IsOwnPro(config, key)) {\r\n\t\t/*TODO:根据config判断对象是否可被删除*/\r\n\t\t// res = config[key]\r\n\t\tgetter && delete getter[key];\r\n\t\tsetter && delete setter[key];\r\n\t\tdelete value[key];\r\n\t\tdelete config[key];\r\n\t}\r\n\treturn res\r\n};\r\n\r\nfunction $Object(v) {\r\n\treturn v === null ? $null : new $$Object(v);\r\n};\nScope.String = $String;\r\n\r\nfunction $$String(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$String.TypeofValue = \"string\"\r\n\r\nvar __$$StringPrototype = $$String[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$StringPrototype.get = function (key) {\r\n\tvar self = this;\r\n\tvar value = self.V;\r\n\tif (isFinite(key) && key % 1 === 0) {\r\n\t\tvar res = value.charAt(key)\r\n\t} else {\r\n\t\tres = value[key]\r\n\t}\r\n\treturn res\r\n};\r\n__$$StringPrototype.set = function (key, obj) {\r\n\tvar self = this;\r\n\tvar value = self.V;\r\n\tif (!(isFinite(key) && key % 1 === 0)) {\r\n\t\tvalue[key] = obj\r\n\t}\r\n\treturn obj\r\n};\r\n\r\nfunction $String(v) {\r\n\treturn new $$String(v)\r\n};\nScope.Undefined = $Undefined;\r\nfunction $$Undefined(v) {\r\n\tthis.V = v;\r\n};\r\n$$Undefined.TypeofValue = \"undefined\";\r\n\r\nvar __$$UndefinedProperty = $$Undefined[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$UndefinedProperty[__VALUEOF] = _Undefined_AND_Null_TypeError;\r\n__$$UndefinedProperty[__TOSTRING] = _Undefined_AND_Null_TypeError;\r\n\r\n/*\r\n * undefined是一个系统常量\r\n */\r\nvar $undefined = new $$Undefined();\r\n\r\nfunction $Undefined() {\r\n\treturn $undefined\r\n};\n}));","(function(root, factory) {\r\n\t\tif (typeof define === 'function' && define.amd) {\r\n\t\t\tdefine([], function() {\r\n\t\t\t\treturn factory(root);\r\n\t\t\t});\r\n\t\t} else if (typeof exports === 'object') {\r\n\t\t\tfactory(module.exports);\r\n\t\t} else {\r\n\t\t\tfactory(root);\r\n\t\t}\r\n\t}(typeof global != 'undefined' ? global : typeof window != 'undefined' ? window : this, function(global) {\n/*\r\n * 更好的压缩率\r\n */\r\nvar __PROTOTYPE = \"prototype\";\r\nvar __VALUEOF = \"valueOf\";\r\nvar __TOSTRING = \"toString\";\r\nvar void_0;\r\nvar _GlobalFunction = Function;\r\n\r\nvar TRUE = true;\r\nvar FALSE = false;\r\nvar NULL = null;\r\nvar UNDEFINED;\r\n// var NAN = NaN;\r\n// var INFINITY = Infinity;\r\n\r\nfunction $Push(arr, item) {\r\n\tarr[arr.length] = item;\r\n\treturn arr\r\n}\r\n\r\nfunction $ForEach(arr, cb) {\r\n\tfor (var i = 0, len = arr.length; i < len; i += 1) {\r\n\t\tcb(arr[i], i)\r\n\t}\r\n}\r\n\r\nfunction $Map(arr, cb) {\r\n\tfor (var i = 0, len = arr.length, res = []; i < len; i += 1) {\r\n\t\t$Push(res, cb(arr[i], i))\r\n\t}\r\n\treturn res\r\n}\r\n\r\nvar _slice = Array[__PROTOTYPE].slice;\r\nvar __StringProto__ = String[__PROTOTYPE];\r\n\r\nfunction $Slice(arr, start_index, end_index) {\r\n\treturn _slice.call(arr, start_index, end_index);\r\n};\r\n\r\nfunction $Remove(arr, item) {\r\n\tvar index = arr.indexOf(item);\r\n\tindex !== -1 && arr.splice(index, 1);\r\n};\r\n\r\nfunction $HasAndGet(obj, key) {\r\n\treturn obj.hasOwnProperty(key) && obj[key];\r\n};\r\n\r\nvar _hasOwnPro = global.hasOwnProperty;\r\n\r\nfunction $IsOwnPro(obj, key) {\r\n\treturn _hasOwnPro.call(obj, key);\r\n};\r\n\r\nfunction $InsOf(obj, Con) {\r\n\treturn obj instanceof Con\r\n};\r\n\r\nfunction $UID(prefix) {\r\n\treturn (prefix || \"\") + Math.random().toString(36).substr(2);\r\n};\r\n\r\nvar PROTO = _GlobalFunction();\r\n\r\nfunction $Create(proto) {\r\n\tPROTO[__PROTOTYPE] = proto;\r\n\treturn new PROTO;\r\n};\r\n\r\nfunction $LastItem(arr) {\r\n\treturn arr[arr.length - 1]\r\n};\r\n\r\nfunction noop() {}\r\n\r\n//将字符串反转义,同JSON.stringify(string)\r\nvar charIndexBuggy = \"a\" [0] != \"a\";\r\nvar Escapes = {\r\n\t92: \"\\\\\\\\\",\r\n\t34: '\\\\\"',\r\n\t8: \"\\\\b\",\r\n\t12: \"\\\\f\",\r\n\t10: \"\\\\n\",\r\n\t13: \"\\\\r\",\r\n\t9: \"\\\\t\"\r\n};\r\n\r\nfunction strStringify(value) {\r\n\tvar result = '\"',\r\n\t\tindex = 0,\r\n\t\tlength = value.length,\r\n\t\tuseCharIndex = !charIndexBuggy || length > 10;\r\n\tvar symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\r\n\tfor (; index < length; index++) {\r\n\t\tvar charCode = value.charCodeAt(index);\r\n\t\t// If the character is a control character, append its Unicode or\r\n\t\t// shorthand escape sequence; otherwise, append the character as-is.\r\n\t\tswitch (charCode) {\r\n\t\t\tcase 8:\r\n\t\t\tcase 9:\r\n\t\t\tcase 10:\r\n\t\t\tcase 12:\r\n\t\t\tcase 13:\r\n\t\t\tcase 34:\r\n\t\t\tcase 92:\r\n\t\t\t\tresult += Escapes[charCode];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (charCode < 32) {\r\n\t\t\t\t\tresult += unicodePrefix + toPaddedString(2, charCode.toString(16));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tresult += useCharIndex ? symbols[index] : value.charAt(index);\r\n\t\t}\r\n\t}\r\n\treturn result + '\"';\r\n};\nfunction _ReturnThisV() {\r\n\treturn this.V && this.V.valueOf();\r\n};\r\n\r\nfunction _ReturnThisVString() {\r\n\treturn this.V + \"\";\r\n};\r\n\r\nScope.Base = $Base;\r\n\r\nfunction $Base(obj) {\r\n\treturn $InsOf(obj, $Base) ? obj : _BaseTypeCusMap[typeof obj](obj)\r\n};\r\nvar _BaseTypeCusMap = {\r\n\t\"string\": $String,\r\n\t\"boolean\": $Boolean,\r\n\t\"number\": $Number,\r\n\t\"function\": $Function,\r\n\t\"undefined\": $Undefined,\r\n\t\"object\": function (v) {\r\n\t\treturn (v /*!== null */ ? $Object : $Null)(v)\r\n\t}\r\n};\r\n\r\nvar _$BaseProto = $Base[__PROTOTYPE] = {\r\n\thas: function (key) {\r\n\t\treturn $IsOwnPro(this.V, key)\r\n\t},\r\n\t//get Property\r\n\tget: function (key, unpack) {\r\n\t\tvar res = this.V[key];\r\n\t\t$InsOf(res, $Base) || (res = $undefined);// if false then\r\n\t\treturn unpack ? res.valueOf() : res\r\n\t},\r\n\t//set Property\r\n\tset: function (key, value) {\r\n\t\treturn this.V[key] = $Base(value);\r\n\t},\r\n\tTypeOf: function () {\r\n\t\treturn this.constructor.TypeofValue;\r\n\t},\r\n\tdestory: function () {\r\n\t\tdelete this.V;\r\n\t},\r\n\t// ===\r\n\tequal: function (obj) {\r\n\t\treturn this.V === ($InsOf(obj, $Base) ? obj.V : obj)\r\n\t},\r\n\tlike: function (obj) {\r\n\t\treturn this.V == ($InsOf(obj, $Base) ? obj.V : obj)\r\n\t}\r\n};\r\n_$BaseProto[__VALUEOF] = _ReturnThisV;\r\n_$BaseProto[__TOSTRING] = _ReturnThisVString;\r\n\r\n\r\nfunction _Undefined_AND_Null_TypeError() {\r\n\tthrow TypeError(\"Cannot convert undefined or null to object\");\r\n};\nglobal.jScope = Scope;\r\n\r\nfunction Scope(ref_obj, options) {\r\n\toptions || (options = {});\r\n\tvar self = this;\r\n\tself.id = $UID(\"SC\");\r\n\tself.E = {}; // events\r\n\tself.C = []; // children local scope 子集\r\n\tself.R = ref_obj || {}; // reference objects 参考对象\r\n\tvar store = options.store;\r\n\tself.O = $InsOf(store, $Object) ? store : $Object($InsOf(store, Object) ? store : {}); // object 作用域的变量集合\r\n\tself.setParent(options.parent); // pare scope 父级\r\n\tself.returner = null; // 这个作用域最后的返回值\r\n\r\n\tself.B = null; // block 块作用域，默认不激活，交给插件处理\r\n\r\n\tvar onerror = options.onerror;\r\n\tif ($InsOf(onerror, _GlobalFunction)) {\r\n\t\tself.on(\"error\", onerror);\r\n\t}\r\n};\r\n\r\nvar __ScopePrototype = Scope.prototype = {};\r\n__ScopePrototype.on = function (eventName, eventHandle) {\r\n\tvar self = this;\r\n\tvar events = self.E;\r\n\t$Push(events[eventName] || (events[eventName] = []), eventHandle);\r\n\treturn self;\r\n};\r\n__ScopePrototype.off = function (eventName, eventHandle) {\r\n\tvar self = this;\r\n\tvar events = self.E;\r\n\t$Remove(events[eventName] || (events[eventName] = []), eventHandle);\r\n\treturn self;\r\n};\r\n__ScopePrototype.emit = function (eventName) {\r\n\tvar self = this;\r\n\tvar eventList = $HasAndGet(self.E, eventName);\r\n\tif (eventList) {\r\n\t\tvar args = arguments.length > 1 && $Slice(arguments, 1);\r\n\t\t$ForEach(eventList, function (handle) {\r\n\t\t\targs ? handle.apply(self, args) : handle.call(this);\r\n\t\t});\r\n\t}\r\n\treturn self;\r\n};\r\n\r\n__ScopePrototype.push = function (scope_name) {\r\n\tvar self = this;\r\n\tvar child_scope = new Scope({}, {\r\n\t\tparent: self\r\n\t});\r\n\t$Push(self.C, child_scope);\r\n\r\n\tC_SP = child_scope;\r\n\treturn child_scope;\r\n};\r\n__ScopePrototype.pop = function (returner) {\r\n\tvar self = this;\r\n\tvar csp = $LastItem(self.C);\r\n\treturn csp && csp.destroy(returner);\r\n};\r\n\r\n__ScopePrototype.setParent = function (parent) {\r\n\tvar self = this;\r\n\tif (self.P = parent || null) {\r\n\t\tself.get = _ScopeNormalGet;\r\n\t\tself.set = _ScopeNormalSet;\r\n\t\tself.TypeOf = _ScopeNormalTypeOf;\r\n\t\tself.Del = _ScopeNormalDel;\r\n\t} else {\r\n\t\tself.get = _ScopeTopGet;\r\n\t\tself.set = _ScopeTopSet;\r\n\t\tself.TypeOf = _ScopeTopTypeOf;\r\n\t\tself.Del = _ScopeTopDel;\r\n\t}\r\n};\r\n__ScopePrototype.get = _ScopeNormalGet;\r\n\r\n/*\r\n * unpack: 是否解包，如果解包取出的对象默认是原生的JS对象，如果封包取出，则是内部存储的对象\r\n */\r\n/*GET*/\r\nfunction _ScopeNormalGet(key, unpack) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).get(key, unpack);\r\n};\r\n\r\nfunction _ScopeTopGet(key, unpack) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.get(key, unpack);\r\n};\r\n__ScopePrototype.set = _ScopeNormalSet;\r\n/*SET*/\r\nfunction _ScopeNormalSet(key, value) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).set(key, value);\r\n};\r\n\r\nfunction _ScopeTopSet(key, value) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.set(key, value);\r\n};\r\n__ScopePrototype.Var = _ScopeTopSet;\r\n/*TYPEOF*/\r\nfunction _ScopeNormalTypeOf(key) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).TypeOf(key);\r\n};\r\n\r\nfunction _ScopeTopTypeOf(key) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.TypeOf(key);\r\n};\r\n__ScopePrototype.TypeOf = _ScopeTopTypeOf;\r\n/*DELETE*/\r\nfunction _ScopeNormalDel(key) {\r\n\tvar self = this;\r\n\treturn (self.O.has(key) ? self.O : self.P).Del(key);\r\n};\r\n\r\nfunction _ScopeTopDel(key) { // 没有Parent对象的Get方法 no parent get \r\n\treturn this.O.Del(key);\r\n};\r\n__ScopePrototype.Del = _ScopeTopDel;\r\n\r\n// destroy 销毁作用域\r\n__ScopePrototype.destroy = function (returner) {\r\n\tvar self = this;\r\n\t// 注销事件监听\r\n\tself.E = null;\r\n\t// 销毁子集作用域\r\n\t$ForEach(self.C, function (csp) {\r\n\t\tcsp.destroy()\r\n\t});\r\n\tself.C = null;\r\n\t// 移除参考对象\r\n\tself.R = null;\r\n\t// 断开对象的引用，由系统垃圾回收器来进行回收\r\n\tself.O = null;\r\n\t// 断开与父级的关联\r\n\tif (self.P) {\r\n\t\tC_SP = self.P;\r\n\t\t$Remove(C_SP.C, self);\r\n\t\tself.P = null;\r\n\t}\r\n\r\n\t// 禁用这个作用域对象的所有方法。\r\n\tfor (var funName in __ScopePrototype) {\r\n\t\tself[funName] = _DestroyedHandle;\r\n\t}\r\n\r\n\tself.returner = returner;\r\n\treturn returner; // 直接返回返回值而不是被销毁的作用域。让作用域被CG直接回收\r\n};\r\n\r\nfunction _DestroyedHandle() {\r\n\tthrow ReferenceError(\"Scope objects has been destroyed.\");\r\n};\r\n\r\n\r\nvar C_SP = Scope.global = new Scope(global); //current Scope\r\n\r\nScope.current = function () {\r\n\treturn C_SP\r\n};\nScope.Boolean = $Boolean;\r\nfunction $$Boolean(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Boolean.TypeofValue = \"string\"\r\n\r\nvar __$$BooleanProperty = $$Boolean[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n/*\r\n * true false 是系统常量\r\n */\r\n$true = new $$Boolean(TRUE);\r\n$false = new $$Boolean(FALSE);\r\n\r\nfunction $Boolean(v) {\r\n\treturn v ? $true : $false\r\n};\nScope.Function = $Function;\r\n\r\nfunction $$Function(fun, args) {\r\n\tthis.V = fun;\r\n\tthis.A = args;\r\n};\r\n\r\n$$Function.TypeofValue = \"function\"\r\n\r\nvar __$$FunctionProperty = $$Function[__PROTOTYPE] = $Create(_$BaseProto);\r\n__$$FunctionProperty.run = function (ctx, args) {\r\n\tvar self = this;\r\n\tself.V.apply(ctx, args);\r\n};\r\n\r\nfunction $Function(fun, args) {\r\n\treturn $$Function(fun, args)\r\n};\nScope.Null = $Null;\r\nfunction $$Null(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Null.TypeofValue = \"object\";\r\n\r\nvar __$$NullProperty = $$Null[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$NullProperty[__VALUEOF] = _Undefined_AND_Null_TypeError;\r\n__$$NullProperty[__TOSTRING] = _Undefined_AND_Null_TypeError;\r\n/*\r\n * null是一个系统常量\r\n */\r\nvar $null = new $$Null(null);\r\n\r\nfunction $Null() {\r\n\treturn $null\r\n};\nScope.Number = $Number;\r\n\r\nfunction $$Number(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$Number.TypeofValue = \"number\"\r\n\r\nvar __$$NumberProperty = $$Number[__PROTOTYPE] = $Create(_$BaseProto);\r\n/*\r\n * 系统常量\r\n */\r\nvar $NaN = new $$Number(NaN);\r\n$NaN.equal = function () { // any value including NaN, 所以直接返回false\r\n\treturn FALSE\r\n};\r\nvar $Infinity = new $$Number(Infinity);\r\nvar $_Infinity = new $$Number(-Infinity);\r\n\r\nfunction $Number(v) {\r\n\tvar self;\r\n\tif (isNaN(v)) {\r\n\t\tself = $NaN;\r\n\t} else if (v === Infinity) {\r\n\t\tself = $Infinity\r\n\t} else if (v === -Infinity) {\r\n\t\tself = $_Infinity\r\n\t} else {\r\n\t\tself = new $$Number(v);\r\n\t}\r\n\treturn self\r\n};\nScope.Object = $Object;\r\n\r\nfunction $$Object(v) {\r\n\tthis.V = v;\r\n\tthis.G = null; //getter\r\n\tthis.S = null; //setter\r\n\tthis.C = {}; //config\r\n};\r\n$$Object.getProp = function (obj, key) {\r\n\tif ($InsOf(obj, $$Object) || $InsOf(obj, $String) || $InsOf(obj, $Number)) { //可用属性名进行优化\r\n\t\tvar res = obj.get(key)\r\n\t} else if (obj) {\r\n\t\tres = obj[key]\r\n\t}\r\n\treturn res;\r\n};\r\n\r\n$$Object.TypeofValue = \"object\"\r\n\r\nfunction _$$Object_Mix_HasProp(key) {\r\n\tvar self = this;\r\n\treturn $IsOwnPro(self.V, key) || $IsOwnPro(self.G, key) || $IsOwnPro(self.S, key);\r\n};\r\n\r\nfunction _$$Object_Mix_GetProp(key) {\r\n\tvar self = this;\r\n\tvar getter = self.G;\r\n\tvar value = self.V;\r\n\tif ($IsOwnPro(getter, key)) {\r\n\t\tvar res = getter[key].call(value, key)\r\n\t} else {\r\n\t\tres = value[key]\r\n\t}\r\n\treturn res\r\n};\r\n\r\nfunction _$$Object_Mix_SetProp(key, data, config) {\r\n\tvar self = this;\r\n\tvar setter = self.S;\r\n\tvar value = self.V;\r\n\tif ($IsOwnPro(setter, key)) {\r\n\t\tsetter[key].call(value, key, data)\r\n\t} else {\r\n\t\tvar config = self.C;\r\n\t\t/*TODO:根据config判断对象是否可被重写*/\r\n\t\tconfig[key] = config;\r\n\t\tvalue[key] = data\r\n\t}\r\n\treturn data\r\n};\r\n\r\nvar __$$ObjectProperty = $$Object[__PROTOTYPE] = $Create(_$BaseProto);\r\n__$$ObjectProperty.has = function (key) {\r\n\treturn $IsOwnPro(this.C, key)\r\n};\r\n//get Property\r\n__$$ObjectProperty.get = function (key, unpack) {\r\n\tvar self = this;\r\n\tif (self.has(key)) {\r\n\t\tvar res = self.G && $IsOwnPro(self.G, key) ? self.G[key].call(self.V) : self.V[key];\r\n\t} else {\r\n\t\tres = $undefined\r\n\t}\r\n\treturn unpack ? (res ? res.valueOf() : res) : $Base(res)\r\n};\r\n//set Property\r\n__$$ObjectProperty.set = function (key, value, config) {\r\n\tvar self = this;\r\n\t/*TODO:根据config判断对象是否可被重写*/\r\n\tself.C[key] = config;\r\n\tvalue = $Base(value);\r\n\tself.S && $IsOwnPro(self.S, key) ? self.S[key].call(self.V, value) : (self.V[key] = value);\r\n\treturn value;\r\n};\r\n//define getter\r\n__$$ObjectProperty.defGet = function (key, handle, config) {\r\n\tvar self = this;\r\n\tvar getter = self.G || (self.G = {});\r\n\tvar config = self.C;\r\n\tif (!(handle instanceof Function)) {\r\n\t\tthrow TypeError(\"getter must be an function.\")\r\n\t}\r\n\t/*TODO:根据config判断对象是否可被重写*/\r\n\tconfig[key] = config;\r\n\tgetter[key] = handle;\r\n\tself.get = _$$Object_Mix_GetProp;\r\n\tself.has = _$$Object_Mix_HasProp;\r\n};\r\n//define setter\r\n__$$ObjectProperty.defSet = function (key, handle, config) {\r\n\tvar self = this;\r\n\tvar setter = self.S || (self.S = {});\r\n\tvar config = self.C;\r\n\tif (!(handle instanceof Function)) {\r\n\t\tthrow TypeError(\"setter must be an function.\")\r\n\t}\r\n\t/*TODO:根据config判断对象是否可被重写*/\r\n\tconfig[key] = config;\r\n\tsetter[key] = handle;\r\n\tself.set = _$$Object_Mix_SetProp;\r\n\tself.has = _$$Object_Mix_HasProp;\r\n};\r\n__$$ObjectProperty.Del = function (key) {\r\n\tvar self = this;\r\n\tvar config = self.C;\r\n\tvar value = self.V;\r\n\tvar getter = self.G;\r\n\tvar setter = self.S;\r\n\tvar res = TRUE;\r\n\tif ($IsOwnPro(config, key)) {\r\n\t\t/*TODO:根据config判断对象是否可被删除*/\r\n\t\t// res = config[key]\r\n\t\tgetter && delete getter[key];\r\n\t\tsetter && delete setter[key];\r\n\t\tdelete value[key];\r\n\t\tdelete config[key];\r\n\t}\r\n\treturn res\r\n};\r\n\r\nfunction $Object(v) {\r\n\treturn v === null ? $null : new $$Object(v);\r\n};\nScope.String = $String;\r\n\r\nfunction $$String(v) {\r\n\tthis.V = v;\r\n};\r\n\r\n$$String.TypeofValue = \"string\"\r\n\r\nvar __$$StringPrototype = $$String[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$StringPrototype.get = function (key) {\r\n\tvar self = this;\r\n\tvar value = self.V;\r\n\tif (isFinite(key) && key % 1 === 0) {\r\n\t\tvar res = value.charAt(key)\r\n\t} else {\r\n\t\tres = value[key]\r\n\t}\r\n\treturn res\r\n};\r\n__$$StringPrototype.set = function (key, obj) {\r\n\tvar self = this;\r\n\tvar value = self.V;\r\n\tif (!(isFinite(key) && key % 1 === 0)) {\r\n\t\tvalue[key] = obj\r\n\t}\r\n\treturn obj\r\n};\r\n\r\nfunction $String(v) {\r\n\treturn new $$String(v)\r\n};\nScope.Undefined = $Undefined;\r\nfunction $$Undefined(v) {\r\n\tthis.V = v;\r\n};\r\n$$Undefined.TypeofValue = \"undefined\";\r\n\r\nvar __$$UndefinedProperty = $$Undefined[__PROTOTYPE] = $Create(_$BaseProto);\r\n\r\n__$$UndefinedProperty[__VALUEOF] = _Undefined_AND_Null_TypeError;\r\n__$$UndefinedProperty[__TOSTRING] = _Undefined_AND_Null_TypeError;\r\n\r\n/*\r\n * undefined是一个系统常量\r\n */\r\nvar $undefined = new $$Undefined();\r\n\r\nfunction $Undefined() {\r\n\treturn $undefined\r\n};\n}));"],"sourceRoot":"/source/"}